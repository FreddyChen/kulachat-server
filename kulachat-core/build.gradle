plugins {
	id 'org.springframework.boot' version "$spring_version"
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		def requested = details.requested
		if(requested.group == 'org.slfj') {
			if(requested.name == "slf4j-api") {
				details.useVersion("$slf4j_version")
			}
		}
	}
}

dependencies {
	testImplementation group: 'junit', name: 'junit', version: "$junit_version"
	implementation "org.springframework.boot:spring-boot-starter-web:$spring_version"
	implementation "org.springframework.boot:spring-boot-starter-jdbc:$spring_version"
	implementation "org.springframework.boot:spring-boot-starter-data-redis:$spring_version"
	testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_version") {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatis_version"
	implementation "mysql:mysql-connector-java:$mysql_version"
	implementation "org.springframework.boot:spring-boot-starter-aop:$aop_version"
	implementation "org.springframework.boot:spring-boot-starter-data-redis:$redis_version"
	implementation "com.auth0:java-jwt:$jwt_version"
	implementation "com.aliyun:aliyun-java-sdk-core:$aliyun_core_version"
	implementation "com.aliyun:aliyun-java-sdk-sts:$aliyun_sts_version"
	implementation project(':kulachat-common')
	implementation (project(':kulachat-ims')) {
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

test {
	useJUnitPlatform()
}
